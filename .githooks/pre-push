#!/usr/bin/env python

import sys
import re
import requests
import xml.etree.ElementTree as ET

JENKINS_ADMIN_USER = 'ahknight'
JENKINS_ADMIN_TOKEN = '58dbffb6d983bca8e2ed5b2f0db218b2'
JENKINS_HOST = '209.129.49.15:8080'
JENKINS_BASE_URL = 'http://' + JENKINS_ADMIN_USER + ':' + JENKINS_ADMIN_TOKEN + '@' + JENKINS_HOST

BITBUCKET_HOST = '209.129.49.15:7990'
BITBUCKET_BASE_URL = 'http://' + JENKINS_ADMIN_USER + ':' + BITBUCKET_HOST

COURSE_NUM = 'CS140'
ASSIGNMENT_NUM = 'EX01'
ASSIGNMENT_NAME = 'HelloWorld'
ORIGINAL_JOB_NAME = COURSE_NUM +'-' + ASSIGNMENT_NUM + '-' + ASSIGNMENT_NAME
ORIGINAL_BITBUCKET_FULL_URL = 'http://' + JENKINS_ADMIN_USER + '@' + BITBUCKET_HOST + '/scm/' + ASSIGNMENT_NUM.lower() + '/' + COURSE_NUM.lower() + '.git'
ORIGINAL_BITBUCKET_URL = 'http://' + BITBUCKET_HOST + '/scm/' + ASSIGNMENT_NUM.lower() + '/' + COURSE_NUM.lower() + '.git'

remote = sys.argv[1]
url = sys.argv[2]

def getCrumb():
	response = requests.get(JENKINS_BASE_URL + '/crumbIssuer/api/xml')
	root = ET.fromstring(response.text)
	return (root.findtext('.//crumbRequestField'), root.findtext('.//crumb'))

def getJenkinsBuild(jobName, crumbKey, crumb):
	response = requests.get(JENKINS_BASE_URL + '/job/' + jobName + '/config.xml', headers={crumbKey: crumb})
	return (response.status_code, response.text)

def createJenkinsBuild(jobName, config, crumbKey, crumb):
	newConfig = config.replace(ORIGINAL_BITBUCKET_URL, url).replace(ORIGINAL_BITBUCKET_FULL_URL, url)
	response = requests.post(JENKINS_BASE_URL + '/createItem?name=' + jobName, data=newConfig, headers={crumbKey: crumb,'Content-Type': 'application/xml'})
	return response.status_code

# Check if the student is trying to push to the original assignment repository 
# instead of their forked repository.
print('Pushing commits to ' + url)
if re.search('\/scm\/ex[0-9]{2}\/.+\.git', url) != None:
	print("You are trying to push to the assignment's original URL. Please see http://209.129.49.15:7990 for directions on correcting this in eclipse")
	sys.exit(1)

# Grab the BitBucket user name from repository URL
bitbucketUser = re.search('\/scm\/~(\w+)\/.+\.git', url).group(1)
print('BitBucket user: ' + bitbucketUser)

userJobName = COURSE_NUM + '-' + ASSIGNMENT_NUM + '-' + bitbucketUser

# Check if there is already a build on Jenkins for this student's fork
key, crumb = getCrumb()

status, body = getJenkinsBuild(userJobName, key, crumb)

if status != 200:
	print('Build not created yet, getting base build');
	status, buildConfig = getJenkinsBuild(ORIGINAL_JOB_NAME, key, crumb)
	if status == 200:
		print('Found original build configuration')
		if createJenkinsBuild(userJobName, buildConfig, key, crumb) == 200:
			print ('Successfully created new build')
		else:
			print ('Not able to create new build')

